package Utils;

import java.util.Arrays;

public class Comparator {
    //    用于对比的方法B
    public static void compatator(int[] arr) {
        Arrays.sort(arr);
    }

    // genetate Ramdom Array
    public static int[] geneateRamdomArray(int maxSize, int maxValue) {
//        1、Math.random  [0,1)
//        2、N*Math.random  [0,N)
//        3、(int)N*Math.random [0,N)int
//        4、(int)(N+1)*Math.random [0,N]int
        //产生一个maxSize的随机数组
        int[] arr = new int[(int) ((maxSize + 1) * Math.random())];
        for (int i = 0; i < arr.length; i++) {
            //前一项[0,N+1)  后一项[0,N)int
            arr[i] = (int) ((maxValue + 1) * Math.random() - (int) (maxValue * Math.random()));
        }
        return arr;
    }

    public static int[] copyArray(int[] arr) {
        int[] arr2 = new int[arr.length];
        for (int i = 0; i < arr2.length; i++) {
            arr2[i] = arr[i];
        }
        return arr2;
    }

    public static boolean isEqual(int[] arr1, int[] arr2) {
        boolean isEqual = true;
        if (arr1.length != arr2.length) {
            isEqual = false;
            return isEqual;
        }
        for (int i = 0; i < arr1.length; i++) {
            if (arr1[i] != arr2[i]) {
                isEqual = false;
                return isEqual;
            }
        }
        return isEqual;
    }
    //    for test
//    public static void main(String[] args) {
//    int testtime = 50000;
//    int maxSize = 100;
//    int maxValue = 100;
//    boolean isSucceed = true;
//    int[] arr = geneateRamdomArray(maxSize,maxValue);
////    java (int) 向中心0取整
////        double test = -9.99;
////        int a = (int)test;
////        System.out.println(a);
//    }
}
