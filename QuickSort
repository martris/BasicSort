import java.util.Random;

public class QuickSort {
    public static void quickSort(int[] arr) {
        if (arr.length < 2 || arr == null) {
            return;
        }
        quickSort(arr, 0, arr.length - 1);
    }

    public static void quickSort(int[] arr, int L, int R) {
        if (L < R) {
            swap(arr, L+(int) (Math.random()*(R-L+1)),R);
            int[] bound = partition(arr, L, R);
            quickSort(arr, L, bound[0]);
            quickSort(arr, bound[1], R);
        }
    }

    public static int[] partition(int[] arr, int L, int R) {
        int left = L - 1;//小于区的右边界
        int right = R + 1;//大于区的左边界
        int i = L;//可以用L代替i，省一个变量
        int mark = arr[R];
//            swap(arr,R,L);
        while (i < right) {
            if (arr[i] < mark) {
                swap(arr, i++, ++left);
            } else if (arr[i] == mark) {
                i++;
            } else {
                swap(arr, i, --right);
            }
        }
        int[] bound = new int[2];
        bound[0] = left;
        bound[1] = right;
//            for(int j = L;j<R+1;j++){
//                System.out.println(arr[j]);
//            }
        return bound;
    }

    public static void swap(int[] arr, int i, int j) {
        if ((!(i > -1 && i < arr.length)) || (!(j > -1 && j < arr.length))) {
            return;
        }
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    }

    public static void main(String[] args) {
        int[] arr = {9, 8, 9, 7, 5, 6, 4, 55, 32, 1, 14, 88, 156, 14741};
        quickSort(arr);
        for (int i : arr) {
            System.out.println(i);
        }
    }
}
